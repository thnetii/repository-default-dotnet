name: .NET Continuous Integration

on:
  pull_request: {}
  push:
    branches:
      - main
      - releases/**
  workflow_dispatch: {}

defaults:
  run:
    shell: pwsh

jobs:
  dotnet:
    strategy:
      matrix:
        configuration:
          - release
        runtime:
          - agnostic
        include:
          - msbuild.arguments: |
              -property:BuildId=${{ github.run_number }}
              -property:BuildSourceBranch=${{ github.ref }}
              -consoleLoggerParameters:NoSummary
          - configuration: release
            configuration.id: Release
            configuration.display: Release
          - runtime: agnostic
            os: ubuntu-latest
    name: ${{ matrix['configuration.display'] }} ${{ matrix['runtime.display'] }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Chekout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive
      - name: Prepare .NET SDK action
        uses: thnetii/gh-actions/typescript-action-prepare@main
        with:
          action-name: dotnet-sdk
      - name: .NET Version Information
        uses: thnetii/gh-actions/dotnet-version-info@main
      - name: dotnet restore
        uses: thnetii/gh-actions/dotnet-sdk@main
        with:
          command: restore
          project: |
            [Rr]ef/**/*.*proj
            [Ss]rc/**/*.*proj
            [Tt]ests?/**/*.*proj
            [Ss]amples?/**/*.*proj
          configuration: ${{ matrix['configuration.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
          msbuild-arguments: ${{ matrix['msbuild.arguments'] }}
      - name: dotnet build
        uses: thnetii/gh-actions/dotnet-sdk@main
        with:
          command: build
          project: |
            [Rr]ef/**/*.*proj
            [Ss]rc/**/*.*proj
            [Tt]ests?/**/*.*proj
            [Ss]amples?/**/*.*proj
          configuration: ${{ matrix['configuration.id'] }}
          runtime: ${{ matrix['runtime.id'] }}
          dotnet-arguments: --nologo
          msbuild-arguments: |
            -property:PackageOutputPath=${{ github.workspace }}/packages/bld
            ${{ matrix['msbuild.arguments'] }}
      - name: Upload Nuget artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.repository_owner }}-${{ github.event.repository.name }}-nupkg-${{ matrix.configuration }}${{ matrix['artifact.name.suffix'] }}
          path: packages/bld

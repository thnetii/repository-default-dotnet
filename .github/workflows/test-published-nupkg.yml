name: .NET NuGet package test

on:
  workflow_dispatch: {}
  workflow_run:
    workflows:
      - .NET NuGet package push
    types:
      - completed

jobs:
  nupkg_usage_test:
    name: Test published nupkg
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source:
          - GitHub Packages
          - Azure DevOps
        include:
          - source: GitHub Packages
            nuget-configuration: |
              <?xml version="1.0" encoding="utf-8"?>
              <configuration>
                <packageSources>
                  <add key="github" value="https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" />
                </packageSources>
                <packageSourceCredentials>
                  <github>
                    <add key="username" value="github-actions" />
                    <add key="cleartextpassword" value="" />
                    <add key="validauthenticationtypes" value="basic" />
                  </github>
                </packageSourceCredentials>
              </configuration>
          - source: Azure DevOps
            nuget-configuration: |
              <?xml version="1.0" encoding="utf-8"?>
              <configuration>
                <packageSources>
                  <add key="azuredevops" value="https://pkgs.dev.azure.com/thnetii/artifacts/_packaging/public/nuget/v3/index.json" />
                </packageSources>
              </configuration>
    steps:
      - name: Chekout ${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v2
      - name: 'Initialise orphaned git workspace'
        shell: pwsh
        run: |
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git checkout --orphan workflow_run/${{ github.run_id }}
          git reset
          git clean -ffdx
          git commit --allow-empty -m "Initial commit"
          git checkout ${{ github.sha }} -- Directory.Meta.props test
          [string]$NugetConfig = $ENV:MATRIX_NUGET_CONFIG_CONTENT
          $NugetConfig | Out-File ./test/nuget.config -Encoding utf8 -Force
          git status
        env:
          MATRIX_NUGET_CONFIG_CONTENT: ${{ matrix['nuget-configuration'] }}
      - name: 'Add GitHub Access Token to NuGet configuration'
        if: matrix['source'] == 'GitHub Packages'
        shell: pwsh
        run: |
          [xml]$NugetConfig = Get-Content ./nuget.config
          $PasswordNode = $NugetConfig.SelectSingleNode("/configuration/packageSourceCredentials/github/add[@key=`"cleartextpassword`"]")
          $PasswordNode.SetAttribute("value", "${{ github.token }}")
          $NugetConfig.Save((Resolve-Path ./nuget.config))
        working-directory: test
      - name: 'Run .NET SDK'
        shell: pwsh
        run: |
          dotnet add package --prerelease THNETII.RepositoryDefault.Dotnet.Build.GitHub
          dotnet build -bl:MSBuild.binlog
          Remove-Item -Force ../nuget.config
        working-directory: test/THNETII.RepositoryDefault.Dotnet.Build.Test
      - name: 'Upload test directory as artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.repository_owner }}-${{ github.event.repository.name }}-test
          path: test
